@inject IFurnitureService Service

<div class="search-bar-container">
    <div class="search-bar-left">
        <div class="search-bar-top w-100">
            <RadzenText TextStyle="TextStyle.Subtitle2"  TagName="TagName.H3">Nazwa</RadzenText>
            <RadzenTextBox @bind-Value="@SelectedName" Class="w-100" />
        </div>
        @if (Categories != null)
        {
            <div class="search-bar-bottom w-100 mt-3">
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Kategoria</RadzenText>
                <RadzenDropDown AllowClear="true" TValue="string" @bind-Value="@SelectedCategory" Data=@Categories Class="w-100" />
            </div>
        }

    </div>
</div>
<div class="search-bar-right">
    <RadzenButton ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Medium" Class="w-100" Text="Szukaj"  Click="UserPressedButton" />
</div>

@code {

    [Parameter]
    public EventCallback<string[]> UserSelectedCategory { get; set; }


    List<string> Categories { get; set; }
    public string SelectedCategory { get; set; }
    public string SelectedName { get; set; }

    protected override void OnInitialized()
    {
        Categories = Service.GetCategories().ToList();
    }

    private async Task UserPressedButton()
    {
        string[] search = new string[] { "", "" };
        if (SelectedName != null)
            search[0] = SelectedName;

        if (SelectedCategory != null)
            search[1] = SelectedCategory;

        await UserSelectedCategory.InvokeAsync(search);
    }

}


@* Data=@(customers.Select(c => c.CompanyName).Distinct())
                            Change=@(args => OnChange(args, "DropDown"))*@

